Git分支

一、分支简介
1.Git仓库有blob对象（保存着文件快照）、数对象（记录着目录结构和blob对象索引）以及提交对象（包含着指向树对象的指针和提交信息）
2.提交对象都包含一个父对象的指针，首次提交父对象指针为空
3.创建分支。git branch <branch-name>在当前提交对象上创建一个指针
4.查看各个分支当前所指的对象
git log --oneline --decorate
git log --oneline --decorate --graph --all  输出你的提交历史、各个分支的指向以及项目的分支分叉情况
5.分支切换。git checkout <branch-name>


二、分支新建与合并
1.创建并切换分支
git checkout -b <branch-name>
相当于下面两条语句
git branch <branch-name>
git checkout <branch-name>
2.git merge <branch-name> 把<branch-name>与当前分支进行合并
3.git branch -d <branch-name> 删除分支
4.当不同分支对同一个文件进行修改的时候合并，会出现冲突。
遇到冲突时的解决办法一：手工合并，然后添加暂存（git add就会标记为已解决冲突），提交
二：使用图形化工具来解决冲突：git mergetool


三、分支管理
1.git branch -v 查看每个分支的最后一次提交
2.git branch --merged 可以查看哪些分支已经合并到当前分支
3.git branch --no-merged 可以查看哪些分支还没有合并到当前分支
4.没有合并到当前分支的用git branch -d <branch-name>是不能删除，如果实在是不想要保存修改的内容，可以用git branch -D <branch-name>强制删除


四、远程分支
1.
2.
3.


